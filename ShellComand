##Josh's Setup

sudo pacman -Sy blender wine-staging steam mono jre-openjdk jre-openjdk-headless jdk-openjdk tmux libconfig godot bluez-plugins gimp vim-airline-themes vim-ansible vim-jedi vim-nerdtree vim-nerdcommenter vim-spell-en lutris  


yay -Sy vim-airline vim-youcompleteme-git vim-nerdtree-syntax-highlight vim-fzf-git vim-lightline-git vim-lightline-edge-git game-devices-udev xbox-generic-controller official-gamecube-controller-adapter-rules rpcs3-udev vkd3d-valve-git lib32-vkd3d-valve-git protonup-git brave-bin xf86-video-nouveau-blacklist-git dxvk-bin linux-steam-integration steam-wine-git scd     


##nvidia-beta opencl-nvidia-beta nvidia-utils-beta nvidia-settings-beta
## prime nvidia-prime-select-git
nvidia-merged-settings 
##This could help with updating
sudo pacman -Sy archlinux-keyring
yay -Sy linux-steam-integration scd gamemode-git  
sudo udevadm trigger 
#lib32
#sudo pacman -Rs lib32-mesa lib32-libglvnd lib32-glu lib32-nvidia-cg-toolkit lib32-nvidia-utils lib32-sdl2 steam lib32-faudio lib32-glew pcsx2 wine winetricks
#sudo pacman -Rs lib32-llvm-libs lib32-mesa-vdpau 
#Fonts
# yay -Sy fonts-meta-base fonts-meta-extended-lt

## AMD Vulkan

sudo pacman -S vulkan-radeon lib32-vulkan-radeon (for RADV included in MESA)

sudo pacman -S amdvlk lib32-amdvlk (for AMDVLK Open Source)

yay -S vulkan-amdgpu-pro lib32-vulkan-amdgpu-pro (for AMDVLK Closed Source)

## You can then list your installed vulkan drivers like so:

ls /usr/share/vulkan/icd.d/

## Then we can choose via the VK_ICD_FILENAMES environment variable which driver we want to be using:

export VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/amd_icd64.json (for AMDVLK Open Source)
export VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/radeon_icd.x86_64.json (for RADV)

####HOW TO CHANGE DRIVERS######

Anyone with expertise in how environment variables work can give a clarification on this?

Thank you for any help you can provide

EDITED TLDR with answers thanks to /u/K900_ /u/jazztickets /u/gardotd426

How to set up a vulkan driver permanently?

Add both 32bit and 64bit Vulkan drivers to your /etc/environment file, in my case for RADV:

 sudo nano /etc/environment

# This file is parsed by pam_env module
#
# Syntax: simple "KEY=VAL" pairs on separate lines
#
VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/radeon_icd.i686.json:/usr/share/vulkan/icd.d/radeon_icd.x86_64.json
Alternatively you can set up the same in environment.d as it is the modern way going forward, but check your distro documentation as on Arch /etc/environment.d doesn't exist and ~/.config/environment.d/ is recommended only for user wide environment variables by the Arch Wiki and we want it to be global / system wide.



How to run a Steam game with a different vulkan driver?

In the steam application, select your game > properties > "set launch options..." and for AMDVLK insert: VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/amd_icd32.json:/usr/share/vulkan/icd.d/amd_icd64.json %command%

How to launch an application from the terminal with a different vulkan driver?

Very similar to steam, again for AMDVLK it would be:

VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/amd_icd32.json:/usr/share/vulkan/icd.d/amd_icd64.json "your application.sh or ./application + any arguments"

Note: in case you have a game/application that doesn't require a launcher you can also edit it's .Desktop file but in this case you need to add env in front of Exec= , example for AMDVLK:

Exec=env VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/amd_icd32.json:/usr/share/vulkan/icd.d/amd_icd64.json "your application.sh or ./application + any arguments"

##If fonts are missing, try this ##
 sudo pacman -Sy powerline-common
 sudo pacman -Sy powerline-fonts
 sudo pacman -Sy vim-airline-themes
 yay -Sy ttf-merriweather-sans
 yay -Sy ttf-meslo-nerd-font-powerlevel10k 
  yay -Sy ttf-unifont
  yay -Sy ttf-twemoji
  yay -Sy ttf-ms-fonts
  sudo pacman -Sy awesome-terminal-fonts 
  sudo pacman -S texlive-core texlive-fontsextra 
  sudo yay -Sy powerline-console-fonts 
  sudo yay -Sy powerline-fonts-git  
  sudo yay -Sy vim-airline-themes-git  
  yay -Sy themix-full-git 
  
  
  
 
 

